--- tool/mkconfig.rb.orig	2017-06-30 03:58:32.000000000 -0700
+++ tool/mkconfig.rb	2018-05-08 15:13:23.000000000 -0700
@@ -124,15 +124,25 @@
     when /^prefix$/
       val = "(TOPDIR || DESTDIR + #{val})"
     when /^ARCH_FLAG$/
-      val = "arch_flag || #{val}" if universal
+      val = "arch_flag" if universal
     when /^UNIVERSAL_ARCHNAMES$/
       universal, val = val, 'universal' if universal
-    when /^arch$/
+    when /^includedir$/
+      val = "(ENV['SDKROOT'] || (File.exist?(File.join(CONFIG['prefix'],'include')) ? '' : %x(xcode-select --print-path >/dev/null 2>&1 && xcrun --sdk macosx --show-sdk-path 2>/dev/null).chomp)) + #{val}"
+    when /^(CXXFLAGS|CFLAGS|LDSHARED|LIBRUBY_LDSHARED)$/
       if universal
-        val.sub!(/universal/, %q[#{arch && universal[/(?:\A|\s)#{Regexp.quote(arch)}=(\S+)/, 1] || '\&'}])
+        # configure didn't strip -arch nor -m32/64 from CXXFLAGS
+        # replace the first with ARCH_FLAG and delete the rest
+        if val.sub!(/-(arch\s*\w+|m(32|64))/, '$(ARCH_FLAG)')
+          val.gsub!(/\s*-(arch\s*\w+|m(32|64))/, '')
+        end
       end
-    when /^oldincludedir$/
-      val = '"$(SDKROOT)"'+val if /darwin/ =~ arch
+    when /^LDFLAGS$/
+      val = '"-L."'
+    when /^CC$/
+      val = '"xcrun clang"'
+    when /^CXX$/
+      val = '"xcrun clang++"'
     end
     v = "  CONFIG[\"#{name}\"] #{eq} #{val}\n"
     if fast[name]
@@ -186,8 +196,7 @@
 print "  TOPDIR = File.dirname(__FILE__).chomp!(#{relative_archdir.dump})\n"
 print "  DESTDIR = ", (drive ? "TOPDIR && TOPDIR[/\\A[a-z]:/i] || " : ""), "'' unless defined? DESTDIR\n"
 print <<'ARCH' if universal
-  arch_flag = ENV['ARCHFLAGS'] || ((e = ENV['RC_ARCHS']) && e.split.uniq.map {|a| "-arch #{a}"}.join(' '))
-  arch = arch_flag && arch_flag[/\A\s*-arch\s+(\S+)\s*\z/, 1]
+  arch_flag = ENV['ARCHFLAGS'] || ""
 ARCH
 print "  universal = #{universal}\n" if universal
 print "  CONFIG = {}\n"
@@ -284,6 +293,9 @@
   end
 end
 CROSS_COMPILING = nil unless defined? CROSS_COMPILING
+RUBY_FRAMEWORK = true
+RUBY_FRAMEWORK_VERSION = RbConfig::CONFIG['ruby_version']
+APPLE_GEM_HOME = File.join(RbConfig::CONFIG['libdir'], 'ruby/gems', RbConfig::CONFIG['ruby_version'])
 EOS
 
 $stdout = STDOUT
